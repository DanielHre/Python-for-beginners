####################################
#### while exercises in spanish ####
####################################

# 1. Creamos una programa que lee una secuencia de númeross ycuenta cuántos números son pares y cuántos impares: el programa termina cuando se ingresa cero

numerosimpares = 0
numerospares = 0

numero = int(input("Introduce un número o escriba 0 para detener:"))

while numero != 0:
    if numero % 2 == 1:
        numerosimpares += 1
    else:
        numerospares += 1
    numero = int(input("Introduce un número o escriba 0 para detener:"))

print("Números impares: ", numerosimpares)
print("Números pares: ", numerospares)


# 2. Creamos un juego para adivinar el número secreto
    #Si el usuario se equivoca, sadrá un mensaje y le regresará al ciclo
    #Si el usuario acierta, se le felicitará y será librado del ciclo
    
númeroSecreto = 777
numero = int(input("Ingrese el número secreto:"))

while númeroSecreto != numero:
    print("¡Ja, ja! ¡Estás atrapado en mi ciclo!")
    numero = int(input("Ingrese el número secreto:"))
else:
    print("¡Bien hecho, muggle! Eres libre ahora")

# 3. Para la construcción de una pirámide, esta se apila de acuerdo con un principio simple:
     cada capa inferior contiene un bloque más que la capa superior.
     
    #Nuestra tarea es escribir un programa que lea la cantidad de bloques que tienen los constructores
    y generar la altura de la pirámide que se puede construir utilizando estos bloques. Debemos considerar que 
    La altura se mide por el número de capas completas: si los constructores no tienen la cantidad suficiente 
    de bloques y no pueden completar la siguiente capa, terminan su trabajo inmediatamente.
    
bloques = int(input("Ingrese el número de bloques:"))
altura = 0

if bloques == 0:
    print("No hay bloques para construir la pirámide")
else:
    while bloques - (altura + 1) >= 0: #Aumenta un nivel mientras los bloques alcance.
        bloques -= (altura + 1)
        altura += 1
    else:
        print("La altura de la pirámide:", altura)
    
    
    
     

